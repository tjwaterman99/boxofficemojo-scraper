name: Build

on:
  schedule:
    - cron: "31 8 * * *"
  push:

jobs:
  build-latest:
    runs-on: ubuntu-latest

    env:
        PGDATABASE: postgres
        PGUSER: postgres
        PGPASSWORD: postgres
        PGPORT: 5432
        PGHOST: localhost
    services:
      postgres:
        image: postgres:11
        env:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_DATABASE: postgres
        ports:
            - 5432:5432
        options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2.0.0
        with:
          python-version: '3.7'
      - name: Set env vars
        run: |
          echo "DATE=$(python -c 'import datetime as dt; print((dt.datetime.now() - dt.timedelta(days=3)).date())')" >> $GITHUB_ENV          
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Debug dbt
        run: |
          env
          echo ${{ github.event_name }}
          echo ${{ github.event }}
          dbt debug --profiles-dir ./.dbt --project-dir ./dbt
      - name: Load data
        run: |
          psql -c "create schema raw;"
          psql -f schema.sql
          psql -c "\copy raw.boxofficemojo_revenues from $PWD/out.json"
      - name: Build models
        run: |
          dbt run --project-dir $PWD/dbt --profiles-dir $PWD/.dbt
      - name: Test models
        run: |
          dbt test --project-dir $PWD/dbt --profiles-dir $PWD/.dbt
      - name: Dump models
        run: |
          psql -c "\copy f_boxofficemojo_revenues__stg to '$PWD/data/dumps/revenues_per_day.csv' CSV HEADER"
          gzip $PWD/data/dumps/*
      - name: Build charts
        run: |
          python plotter.py images/tracker.svg
      - name: Create Release
        if: github.event_name == 'schedule'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.DATE }}
          release_name: ${{ env.DATE }}
          draft: false
          prerelease: false
      - name: Upload Dataset
        if: github.event_name == 'schedule'      
        id: upload-dataset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./data/dumps/revenues_per_day.csv.gz
          asset_name: revenues_per_day.csv.gz
          asset_content_type: application/gzip
      # TODO: limit to scheduled events
      - name: Commit images
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout images
          git rebase main
          git add images
          git commit -m "Publish tracker for $DATE"
      # TODO: limit to scheduled events
      - name: Publish images changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: images
          force: true